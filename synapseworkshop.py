# -*- coding: utf-8 -*-
"""SynapseWorkshop.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DDLQ7q9vj62zNis3WGPAJz0aZ7NQ0Xrc
"""

#x()
print("Tony Stark")

print(5)

print(True)

print(True,"tony",9)

print(True,"tony",9,sep="")

#type
type("Faraz")

type(5)

#static binding
a = 10
a = 15 
a = "Saty"
print(a)

a,b,c = 1,2,3
print(a,b,c)

#implicit
a = 5
a = "Tony"
#explicit
a = 10
float(a)
print(a)

#keywords cant be used as variables

#list (collection of data)
my_list = [1,2,3,4]
print(my_list[3])
my_list[0] = 11
print(my_list)

#tuple (same as list but unlike list ..tuple cannot be changed but tuple is faster to access)
my_tuple = (1,2,3,4)
my_tuple[0] = 10 #tuple cannot be changed

#Dictionary
my_Dictionary = {1:"satyam", 2:"Atharva", 3:"Ninad", 4:"Darshan"}
my_Dictionary[2]

#arithmetic
a = 5
b = 10
print(a+b)
print(a-b)
print(a*b)
print(a/b)
print(a//b)
print(a**b)

#relational  (>,<,>=,<=,==)
print(4>5)

#Assignment
a = 2
a += 1
a = a+1
a = a-1
print(a)

#Membership (in,not, not in)
print("f" in "Faraz")

print( 1 in [1,2,3,4,5])
print( 1 not in [1,2,3,3,])

user_name = input("Enter your name: ")
password = int(input("Enter your password: "))
#if-else
if(password == 1234):
    print("Logged in")
else:
    print("Incorrect password")

#for loop
a = [1,2,3,4]
for i in a:
  print(i,end = " ")

#while loop
i = 0
while i <=5:
   print(i)
   i = i+1

#range
for i in range(0,5,1):
  print(i)



#condiotional stattemenst and loops
a = [1,2,3,4,5]
for i in a:
    if i%2 == 0:
        print("even")
    else:
        print("odd")

#iterate through dictionaries
rate = 0
a = {"bread":40,"eggs":20}
b = {"bread":3,"eggs":2}
for i in a:
  rate = rate+(a[i]*b[i])

print(rate)

pip install numpy #numpy works on numbers #faster and takes lesser memory

import numpy as np #np is shortform given for numpy

a = np.array([1,2,3,4],np.float32) #.array used to create array #dtype used to define type and memory
print(a)
print(a.dtype)

b = np.array([[1,2,3],[4,5,6]])
b

a.ndim

b.ndim

c = np.arange(1,6)
c

d=np.arange(1,20)
d

b.shape

b.reshape(1,6)

b[0,2]

d[0:14:2]

d[::2]

d[::-1]

ar1 = np.array([[1,2,3,],[4,5,6],[7,8,9]])
ar2 = np.array([[11,12,13,],[14,15,16],[17,18,19]])
print(ar1)
print(ar2)

print(ar1*ar2)

print(ar1-ar2)

print(ar1/ar2)

import pandas as pd
import numpy as np

sp1 = pd.read_csv("https://raw.githubusercontent.com/YBI-Foundation/Dataset/main/SAT%20GPA.csv")

sp1.head

sp1.info

sp1.describe

sp1.shape

sp1.columns

y = sp1[['SAT']]

X = sp1[['SAT', 'GPA']]

X.shape

y.shape

from sklearn.model_selection import train_test_split

X_test,X_train,y_test,y_train=train_test_split(X,y,random_state=421)

#loc iloc #used to aceess a specific data
sp1.iloc[0]

print(sp1)

from sklearn.linear_model import LinearRegression

model = LinearRegression()

y_pred = model.predict(X_test)

model.intercept_

model.coef_

from sklearn.metrics import mean_absolute_percentage_error

mean_absolute_percentage_error(y_test,y_pred)